version: '2'
volumes:
  backend-db-store:
    driver: local
services:
  spring-app:
    image: devdocker.wifa.uni-leipzig.de:5000/transit/spring-backend:latest
    restart: unless-stopped 
    command: "/bin/sh start.sh"
    environment:
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.spatial.dialect.postgis.PostgisPG9Dialect
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_DATASOURCE_URL:  jdbc:postgresql://backend-db:5432/order-data-storage?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&createDatabaseIfNotExist=true
      SPRING_JPA_HIBERNATE_DDL_AUTO: update       
      #none
      SERVER_SERVLET_CONTEXT_PATH: /api/v1
      SERVER_FORWARD_HEADERS_STRATEGY: FRAMEWORK
    depends_on:
      - backend-db
    labels:
      io.rancher.scheduler.affinity:host_label: role=worker
      project: transit
      io.rancher.container.hostname_override: container_name
      io.rancher.container.pull_image: always
    secrets:
      - TRANSIT_BACKEND_DB_USER_NAME
      - TRANSIT_BACKEND_DB_USER_PASSWORD
      - TRANSIT_BACKEND_AUTH_CLIENT_ID
      - TRANSIT_BACKEND_AUTH_CLIENT_SECRET
      - TRANSIT_BACKEND_AUTH_SCOPE
      - TRANSIT_BACKEND_AUTH_ISSUER_URI

      - TRANSIT_BACKEND_ADMIN_CLIENT_URL
      - TRANSIT_BACKEND_ADMIN_CLIENT_REALM
      - TRANSIT_BACKEND_ADMIN_CLIENT_ID
      - TRANSIT_BACKEND_ADMIN_CLIENT_SECRET
  backend-db:
    image: postgis/postgis:14-3.2
    restart: unless-stopped
    environment:
      PGDATA: /var/lib/postgresql/data/order-data-storage
      POSTGRES_DB: order-data-storage
      POSTGRES_USER_FILE: /run/secrets/TRANSIT_BACKEND_DB_USER_NAME
      POSTGRES_PASSWORD_FILE: /run/secrets/TRANSIT_BACKEND_DB_USER_PASSWORD
    volumes_from:
    - backend-db-volume
    labels:
      io.rancher.scheduler.affinity:host_label: role=worker
      project: transit
      io.rancher.sidekicks: backend-db-volume
      io.rancher.container.hostname_override: container_name
      io.rancher.container.pull_image: always
    secrets:
      - TRANSIT_BACKEND_DB_USER_NAME
      - TRANSIT_BACKEND_DB_USER_PASSWORD
  backend-db-volume:
    image: rawmind/alpine-volume:0.0.2-4
    environment:
      SERVICE_GID: '999'
      SERVICE_UID: '999'
      SERVICE_VOLUME: /var/lib/postgresql/data
    network_mode: none
    volumes:
    - backend-db-store:/var/lib/postgresql/data
    labels:
      io.rancher.container.start_once: 'true'
      project: transit
      io.rancher.container.hostname_override: container_name
      io.rancher.container.pull_image: always

secrets:
  TRANSIT_BACKEND_DB_USER_NAME:
    file: ./secrets/transit_backend_db_user_name.txt
  TRANSIT_BACKEND_DB_USER_PASSWORD:
    file: ./secrets/transit_backend_db_user_password.txt
  TRANSIT_BACKEND_AUTH_CLIENT_ID:
    file: ./secrets/transit_backend_auth_client_id.txt
  TRANSIT_BACKEND_AUTH_CLIENT_SECRET:
    file: ./secrets/transit_backend_auth_client_secret.txt
  TRANSIT_BACKEND_AUTH_SCOPE:
    file: ./secrets/transit_backend_auth_scope.txt
  TRANSIT_BACKEND_AUTH_ISSUER_URI:
    file: ./secrets/transit_backend_auth_issuer_uri.txt

  TRANSIT_BACKEND_ADMIN_CLIENT_URL:
    file: ./secrets/transit_backend_admin_client_url.txt
    
  TRANSIT_BACKEND_ADMIN_CLIENT_REALM:
    file: ./secrets/transit_backend_admin_client_realm.txt
  TRANSIT_BACKEND_ADMIN_CLIENT_ID:
    file: ./secrets/transit_backend_admin_client_id.txt
  TRANSIT_BACKEND_ADMIN_CLIENT_SECRET:
    file: ./secrets/transit_backend_admin_client_secret.txt

#docker-compose up -d  
#rancher up -s transit-backend -f docker-compose.yml -u -c -d 

